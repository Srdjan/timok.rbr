//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 2.0.5.0
// 
namespace RbrSiverlight.ServiceReference {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReportContext", Namespace="http://schemas.datacontract.org/2004/07/RbrData.DataContracts")]
    public partial class ReportContext : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.ObjectModel.ObservableCollection<RbrSiverlight.ServiceReference.PartnerRecord> PartnersField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<RbrSiverlight.ServiceReference.PartnerRecord> Partners {
            get {
                return this.PartnersField;
            }
            set {
                if ((object.ReferenceEquals(this.PartnersField, value) != true)) {
                    this.PartnersField = value;
                    this.RaisePropertyChanged("Partners");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PartnerRecord", Namespace="http://schemas.datacontract.org/2004/07/RbrData.DataContracts")]
    public partial class PartnerRecord : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int IdField;
        
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReportContainer", Namespace="http://schemas.datacontract.org/2004/07/RbrData.DataContracts")]
    public partial class ReportContainer : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.ObjectModel.ObservableCollection<RbrSiverlight.ServiceReference.CustomerReportRecord> CustomerReportField;
        
        private string ErrorField;
        
        private System.Collections.ObjectModel.ObservableCollection<RbrSiverlight.ServiceReference.NodeReportRecord> NodeReportField;
        
        private System.Collections.ObjectModel.ObservableCollection<RbrSiverlight.ServiceReference.RouteReportRecord> RouteReportField;
        
        private System.Collections.ObjectModel.ObservableCollection<RbrSiverlight.ServiceReference.TrunkReportRecord> TrunkReportField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<RbrSiverlight.ServiceReference.CustomerReportRecord> CustomerReport {
            get {
                return this.CustomerReportField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerReportField, value) != true)) {
                    this.CustomerReportField = value;
                    this.RaisePropertyChanged("CustomerReport");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Error {
            get {
                return this.ErrorField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorField, value) != true)) {
                    this.ErrorField = value;
                    this.RaisePropertyChanged("Error");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<RbrSiverlight.ServiceReference.NodeReportRecord> NodeReport {
            get {
                return this.NodeReportField;
            }
            set {
                if ((object.ReferenceEquals(this.NodeReportField, value) != true)) {
                    this.NodeReportField = value;
                    this.RaisePropertyChanged("NodeReport");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<RbrSiverlight.ServiceReference.RouteReportRecord> RouteReport {
            get {
                return this.RouteReportField;
            }
            set {
                if ((object.ReferenceEquals(this.RouteReportField, value) != true)) {
                    this.RouteReportField = value;
                    this.RaisePropertyChanged("RouteReport");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<RbrSiverlight.ServiceReference.TrunkReportRecord> TrunkReport {
            get {
                return this.TrunkReportField;
            }
            set {
                if ((object.ReferenceEquals(this.TrunkReportField, value) != true)) {
                    this.TrunkReportField = value;
                    this.RaisePropertyChanged("TrunkReport");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomerReportRecord", Namespace="http://schemas.datacontract.org/2004/07/RbrData.DataContracts")]
    public partial class CustomerReportRecord : object, System.ComponentModel.INotifyPropertyChanged {
        
        private short CarrierAcctIdField;
        
        private string CarrierNameField;
        
        private System.Nullable<int> CompletedField;
        
        private System.Nullable<decimal> CostField;
        
        private short CustomerAcctIdField;
        
        private System.Nullable<int> DayField;
        
        private System.Nullable<int> InMinutesField;
        
        private System.Nullable<short> NodeIdField;
        
        private System.Nullable<decimal> OutMinutesField;
        
        private string RouteNameField;
        
        private System.Nullable<int> TotalField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short CarrierAcctId {
            get {
                return this.CarrierAcctIdField;
            }
            set {
                if ((this.CarrierAcctIdField.Equals(value) != true)) {
                    this.CarrierAcctIdField = value;
                    this.RaisePropertyChanged("CarrierAcctId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CarrierName {
            get {
                return this.CarrierNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CarrierNameField, value) != true)) {
                    this.CarrierNameField = value;
                    this.RaisePropertyChanged("CarrierName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Completed {
            get {
                return this.CompletedField;
            }
            set {
                if ((this.CompletedField.Equals(value) != true)) {
                    this.CompletedField = value;
                    this.RaisePropertyChanged("Completed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Cost {
            get {
                return this.CostField;
            }
            set {
                if ((this.CostField.Equals(value) != true)) {
                    this.CostField = value;
                    this.RaisePropertyChanged("Cost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short CustomerAcctId {
            get {
                return this.CustomerAcctIdField;
            }
            set {
                if ((this.CustomerAcctIdField.Equals(value) != true)) {
                    this.CustomerAcctIdField = value;
                    this.RaisePropertyChanged("CustomerAcctId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Day {
            get {
                return this.DayField;
            }
            set {
                if ((this.DayField.Equals(value) != true)) {
                    this.DayField = value;
                    this.RaisePropertyChanged("Day");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> InMinutes {
            get {
                return this.InMinutesField;
            }
            set {
                if ((this.InMinutesField.Equals(value) != true)) {
                    this.InMinutesField = value;
                    this.RaisePropertyChanged("InMinutes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> NodeId {
            get {
                return this.NodeIdField;
            }
            set {
                if ((this.NodeIdField.Equals(value) != true)) {
                    this.NodeIdField = value;
                    this.RaisePropertyChanged("NodeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> OutMinutes {
            get {
                return this.OutMinutesField;
            }
            set {
                if ((this.OutMinutesField.Equals(value) != true)) {
                    this.OutMinutesField = value;
                    this.RaisePropertyChanged("OutMinutes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RouteName {
            get {
                return this.RouteNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RouteNameField, value) != true)) {
                    this.RouteNameField = value;
                    this.RaisePropertyChanged("RouteName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Total {
            get {
                return this.TotalField;
            }
            set {
                if ((this.TotalField.Equals(value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NodeReportRecord", Namespace="http://schemas.datacontract.org/2004/07/RbrData.DataContracts")]
    public partial class NodeReportRecord : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<int> CompletedField;
        
        private int DateHourField;
        
        private System.Nullable<int> InMinutesField;
        
        private System.Nullable<short> NodeIdField;
        
        private System.Nullable<decimal> OutMinutesField;
        
        private System.Nullable<int> TotalField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Completed {
            get {
                return this.CompletedField;
            }
            set {
                if ((this.CompletedField.Equals(value) != true)) {
                    this.CompletedField = value;
                    this.RaisePropertyChanged("Completed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DateHour {
            get {
                return this.DateHourField;
            }
            set {
                if ((this.DateHourField.Equals(value) != true)) {
                    this.DateHourField = value;
                    this.RaisePropertyChanged("DateHour");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> InMinutes {
            get {
                return this.InMinutesField;
            }
            set {
                if ((this.InMinutesField.Equals(value) != true)) {
                    this.InMinutesField = value;
                    this.RaisePropertyChanged("InMinutes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> NodeId {
            get {
                return this.NodeIdField;
            }
            set {
                if ((this.NodeIdField.Equals(value) != true)) {
                    this.NodeIdField = value;
                    this.RaisePropertyChanged("NodeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> OutMinutes {
            get {
                return this.OutMinutesField;
            }
            set {
                if ((this.OutMinutesField.Equals(value) != true)) {
                    this.OutMinutesField = value;
                    this.RaisePropertyChanged("OutMinutes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Total {
            get {
                return this.TotalField;
            }
            set {
                if ((this.TotalField.Equals(value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RouteReportRecord", Namespace="http://schemas.datacontract.org/2004/07/RbrData.DataContracts")]
    public partial class RouteReportRecord : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ACDField;
        
        private string ASRField;
        
        private string CarrierNameField;
        
        private System.Nullable<int> CompletedField;
        
        private System.Nullable<decimal> CostField;
        
        private string CustomerNameField;
        
        private string DateField;
        
        private System.Nullable<int> InMinutesField;
        
        private string NodeField;
        
        private System.Nullable<decimal> OutMinutesField;
        
        private string RouteNameField;
        
        private System.Nullable<int> TotalField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ACD {
            get {
                return this.ACDField;
            }
            set {
                if ((object.ReferenceEquals(this.ACDField, value) != true)) {
                    this.ACDField = value;
                    this.RaisePropertyChanged("ACD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ASR {
            get {
                return this.ASRField;
            }
            set {
                if ((object.ReferenceEquals(this.ASRField, value) != true)) {
                    this.ASRField = value;
                    this.RaisePropertyChanged("ASR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CarrierName {
            get {
                return this.CarrierNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CarrierNameField, value) != true)) {
                    this.CarrierNameField = value;
                    this.RaisePropertyChanged("CarrierName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Completed {
            get {
                return this.CompletedField;
            }
            set {
                if ((this.CompletedField.Equals(value) != true)) {
                    this.CompletedField = value;
                    this.RaisePropertyChanged("Completed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Cost {
            get {
                return this.CostField;
            }
            set {
                if ((this.CostField.Equals(value) != true)) {
                    this.CostField = value;
                    this.RaisePropertyChanged("Cost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerName {
            get {
                return this.CustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerNameField, value) != true)) {
                    this.CustomerNameField = value;
                    this.RaisePropertyChanged("CustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Date {
            get {
                return this.DateField;
            }
            set {
                if ((object.ReferenceEquals(this.DateField, value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> InMinutes {
            get {
                return this.InMinutesField;
            }
            set {
                if ((this.InMinutesField.Equals(value) != true)) {
                    this.InMinutesField = value;
                    this.RaisePropertyChanged("InMinutes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Node {
            get {
                return this.NodeField;
            }
            set {
                if ((object.ReferenceEquals(this.NodeField, value) != true)) {
                    this.NodeField = value;
                    this.RaisePropertyChanged("Node");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> OutMinutes {
            get {
                return this.OutMinutesField;
            }
            set {
                if ((this.OutMinutesField.Equals(value) != true)) {
                    this.OutMinutesField = value;
                    this.RaisePropertyChanged("OutMinutes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RouteName {
            get {
                return this.RouteNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RouteNameField, value) != true)) {
                    this.RouteNameField = value;
                    this.RaisePropertyChanged("RouteName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Total {
            get {
                return this.TotalField;
            }
            set {
                if ((this.TotalField.Equals(value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TrunkReportRecord", Namespace="http://schemas.datacontract.org/2004/07/RbrData.DataContracts")]
    public partial class TrunkReportRecord : object, System.ComponentModel.INotifyPropertyChanged {
        
        private short CarrierAcctIdField;
        
        private System.Nullable<int> CompletedField;
        
        private System.Nullable<decimal> CostField;
        
        private short CustomerAcctIdField;
        
        private string CustomerNameField;
        
        private System.Nullable<int> DayField;
        
        private System.Nullable<int> InMinutesField;
        
        private System.Nullable<short> NodeIdField;
        
        private System.Nullable<decimal> OutMinutesField;
        
        private string RouteNameField;
        
        private System.Nullable<int> TotalField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short CarrierAcctId {
            get {
                return this.CarrierAcctIdField;
            }
            set {
                if ((this.CarrierAcctIdField.Equals(value) != true)) {
                    this.CarrierAcctIdField = value;
                    this.RaisePropertyChanged("CarrierAcctId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Completed {
            get {
                return this.CompletedField;
            }
            set {
                if ((this.CompletedField.Equals(value) != true)) {
                    this.CompletedField = value;
                    this.RaisePropertyChanged("Completed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Cost {
            get {
                return this.CostField;
            }
            set {
                if ((this.CostField.Equals(value) != true)) {
                    this.CostField = value;
                    this.RaisePropertyChanged("Cost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short CustomerAcctId {
            get {
                return this.CustomerAcctIdField;
            }
            set {
                if ((this.CustomerAcctIdField.Equals(value) != true)) {
                    this.CustomerAcctIdField = value;
                    this.RaisePropertyChanged("CustomerAcctId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerName {
            get {
                return this.CustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerNameField, value) != true)) {
                    this.CustomerNameField = value;
                    this.RaisePropertyChanged("CustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Day {
            get {
                return this.DayField;
            }
            set {
                if ((this.DayField.Equals(value) != true)) {
                    this.DayField = value;
                    this.RaisePropertyChanged("Day");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> InMinutes {
            get {
                return this.InMinutesField;
            }
            set {
                if ((this.InMinutesField.Equals(value) != true)) {
                    this.InMinutesField = value;
                    this.RaisePropertyChanged("InMinutes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> NodeId {
            get {
                return this.NodeIdField;
            }
            set {
                if ((this.NodeIdField.Equals(value) != true)) {
                    this.NodeIdField = value;
                    this.RaisePropertyChanged("NodeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> OutMinutes {
            get {
                return this.OutMinutesField;
            }
            set {
                if ((this.OutMinutesField.Equals(value) != true)) {
                    this.OutMinutesField = value;
                    this.RaisePropertyChanged("OutMinutes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RouteName {
            get {
                return this.RouteNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RouteNameField, value) != true)) {
                    this.RouteNameField = value;
                    this.RaisePropertyChanged("RouteName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Total {
            get {
                return this.TotalField;
            }
            set {
                if ((this.TotalField.Equals(value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.timok.com/services/v3.0", ConfigurationName="ServiceReference.DashboardService")]
    public interface DashboardService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="LoginRequest", ReplyAction="LoginResponse")]
        System.IAsyncResult BeginLogin(System.AsyncCallback callback, object asyncState);
        
        RbrSiverlight.ServiceReference.ReportContext EndLogin(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="GetNodesReportRequest", ReplyAction="GetNodesReportResponse")]
        System.IAsyncResult BeginGetNodeReport(string pShortDateString, System.AsyncCallback callback, object asyncState);
        
        RbrSiverlight.ServiceReference.ReportContainer EndGetNodeReport(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="GetCustomerReportRequest", ReplyAction="GetCustomerReportResponse")]
        System.IAsyncResult BeginGetCustomerReport(int pPartnerId, string pShortDateString, System.AsyncCallback callback, object asyncState);
        
        RbrSiverlight.ServiceReference.ReportContainer EndGetCustomerReport(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="GetRouteReportRequest", ReplyAction="GetRouteReportResponse")]
        System.IAsyncResult BeginGetRouteReport(int pPartnerId, string pShortDateString, System.AsyncCallback callback, object asyncState);
        
        RbrSiverlight.ServiceReference.ReportContainer EndGetRouteReport(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="GetTrunkReportRequest", ReplyAction="GetTrunkReportResponse")]
        System.IAsyncResult BeginGetTrunkReport(int pPartnerId, string pShortDateString, System.AsyncCallback callback, object asyncState);
        
        RbrSiverlight.ServiceReference.ReportContainer EndGetTrunkReport(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="LogRequest", ReplyAction="LogResponse")]
        System.IAsyncResult BeginLogger(string pMessage, System.AsyncCallback callback, object asyncState);
        
        void EndLogger(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface DashboardServiceChannel : RbrSiverlight.ServiceReference.DashboardService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public RbrSiverlight.ServiceReference.ReportContext Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((RbrSiverlight.ServiceReference.ReportContext)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetNodeReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetNodeReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public RbrSiverlight.ServiceReference.ReportContainer Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((RbrSiverlight.ServiceReference.ReportContainer)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetCustomerReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCustomerReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public RbrSiverlight.ServiceReference.ReportContainer Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((RbrSiverlight.ServiceReference.ReportContainer)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetRouteReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRouteReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public RbrSiverlight.ServiceReference.ReportContainer Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((RbrSiverlight.ServiceReference.ReportContainer)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetTrunkReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTrunkReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public RbrSiverlight.ServiceReference.ReportContainer Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((RbrSiverlight.ServiceReference.ReportContainer)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class DashboardServiceClient : System.ServiceModel.ClientBase<RbrSiverlight.ServiceReference.DashboardService>, RbrSiverlight.ServiceReference.DashboardService {
        
        private BeginOperationDelegate onBeginLoginDelegate;
        
        private EndOperationDelegate onEndLoginDelegate;
        
        private System.Threading.SendOrPostCallback onLoginCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetNodeReportDelegate;
        
        private EndOperationDelegate onEndGetNodeReportDelegate;
        
        private System.Threading.SendOrPostCallback onGetNodeReportCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCustomerReportDelegate;
        
        private EndOperationDelegate onEndGetCustomerReportDelegate;
        
        private System.Threading.SendOrPostCallback onGetCustomerReportCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRouteReportDelegate;
        
        private EndOperationDelegate onEndGetRouteReportDelegate;
        
        private System.Threading.SendOrPostCallback onGetRouteReportCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTrunkReportDelegate;
        
        private EndOperationDelegate onEndGetTrunkReportDelegate;
        
        private System.Threading.SendOrPostCallback onGetTrunkReportCompletedDelegate;
        
        private BeginOperationDelegate onBeginLoggerDelegate;
        
        private EndOperationDelegate onEndLoggerDelegate;
        
        private System.Threading.SendOrPostCallback onLoggerCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public DashboardServiceClient() {
        }
        
        public DashboardServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DashboardServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DashboardServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DashboardServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<LoginCompletedEventArgs> LoginCompleted;
        
        public event System.EventHandler<GetNodeReportCompletedEventArgs> GetNodeReportCompleted;
        
        public event System.EventHandler<GetCustomerReportCompletedEventArgs> GetCustomerReportCompleted;
        
        public event System.EventHandler<GetRouteReportCompletedEventArgs> GetRouteReportCompleted;
        
        public event System.EventHandler<GetTrunkReportCompletedEventArgs> GetTrunkReportCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> LoggerCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult RbrSiverlight.ServiceReference.DashboardService.BeginLogin(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLogin(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        RbrSiverlight.ServiceReference.ReportContext RbrSiverlight.ServiceReference.DashboardService.EndLogin(System.IAsyncResult result) {
            return base.Channel.EndLogin(result);
        }
        
        private System.IAsyncResult OnBeginLogin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((RbrSiverlight.ServiceReference.DashboardService)(this)).BeginLogin(callback, asyncState);
        }
        
        private object[] OnEndLogin(System.IAsyncResult result) {
            RbrSiverlight.ServiceReference.ReportContext retVal = ((RbrSiverlight.ServiceReference.DashboardService)(this)).EndLogin(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLoginCompleted(object state) {
            if ((this.LoginCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoginCompleted(this, new LoginCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoginAsync() {
            this.LoginAsync(null);
        }
        
        public void LoginAsync(object userState) {
            if ((this.onBeginLoginDelegate == null)) {
                this.onBeginLoginDelegate = new BeginOperationDelegate(this.OnBeginLogin);
            }
            if ((this.onEndLoginDelegate == null)) {
                this.onEndLoginDelegate = new EndOperationDelegate(this.OnEndLogin);
            }
            if ((this.onLoginCompletedDelegate == null)) {
                this.onLoginCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoginCompleted);
            }
            base.InvokeAsync(this.onBeginLoginDelegate, null, this.onEndLoginDelegate, this.onLoginCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult RbrSiverlight.ServiceReference.DashboardService.BeginGetNodeReport(string pShortDateString, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetNodeReport(pShortDateString, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        RbrSiverlight.ServiceReference.ReportContainer RbrSiverlight.ServiceReference.DashboardService.EndGetNodeReport(System.IAsyncResult result) {
            return base.Channel.EndGetNodeReport(result);
        }
        
        private System.IAsyncResult OnBeginGetNodeReport(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string pShortDateString = ((string)(inValues[0]));
            return ((RbrSiverlight.ServiceReference.DashboardService)(this)).BeginGetNodeReport(pShortDateString, callback, asyncState);
        }
        
        private object[] OnEndGetNodeReport(System.IAsyncResult result) {
            RbrSiverlight.ServiceReference.ReportContainer retVal = ((RbrSiverlight.ServiceReference.DashboardService)(this)).EndGetNodeReport(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetNodeReportCompleted(object state) {
            if ((this.GetNodeReportCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetNodeReportCompleted(this, new GetNodeReportCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetNodeReportAsync(string pShortDateString) {
            this.GetNodeReportAsync(pShortDateString, null);
        }
        
        public void GetNodeReportAsync(string pShortDateString, object userState) {
            if ((this.onBeginGetNodeReportDelegate == null)) {
                this.onBeginGetNodeReportDelegate = new BeginOperationDelegate(this.OnBeginGetNodeReport);
            }
            if ((this.onEndGetNodeReportDelegate == null)) {
                this.onEndGetNodeReportDelegate = new EndOperationDelegate(this.OnEndGetNodeReport);
            }
            if ((this.onGetNodeReportCompletedDelegate == null)) {
                this.onGetNodeReportCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetNodeReportCompleted);
            }
            base.InvokeAsync(this.onBeginGetNodeReportDelegate, new object[] {
                        pShortDateString}, this.onEndGetNodeReportDelegate, this.onGetNodeReportCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult RbrSiverlight.ServiceReference.DashboardService.BeginGetCustomerReport(int pPartnerId, string pShortDateString, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCustomerReport(pPartnerId, pShortDateString, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        RbrSiverlight.ServiceReference.ReportContainer RbrSiverlight.ServiceReference.DashboardService.EndGetCustomerReport(System.IAsyncResult result) {
            return base.Channel.EndGetCustomerReport(result);
        }
        
        private System.IAsyncResult OnBeginGetCustomerReport(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int pPartnerId = ((int)(inValues[0]));
            string pShortDateString = ((string)(inValues[1]));
            return ((RbrSiverlight.ServiceReference.DashboardService)(this)).BeginGetCustomerReport(pPartnerId, pShortDateString, callback, asyncState);
        }
        
        private object[] OnEndGetCustomerReport(System.IAsyncResult result) {
            RbrSiverlight.ServiceReference.ReportContainer retVal = ((RbrSiverlight.ServiceReference.DashboardService)(this)).EndGetCustomerReport(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCustomerReportCompleted(object state) {
            if ((this.GetCustomerReportCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCustomerReportCompleted(this, new GetCustomerReportCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCustomerReportAsync(int pPartnerId, string pShortDateString) {
            this.GetCustomerReportAsync(pPartnerId, pShortDateString, null);
        }
        
        public void GetCustomerReportAsync(int pPartnerId, string pShortDateString, object userState) {
            if ((this.onBeginGetCustomerReportDelegate == null)) {
                this.onBeginGetCustomerReportDelegate = new BeginOperationDelegate(this.OnBeginGetCustomerReport);
            }
            if ((this.onEndGetCustomerReportDelegate == null)) {
                this.onEndGetCustomerReportDelegate = new EndOperationDelegate(this.OnEndGetCustomerReport);
            }
            if ((this.onGetCustomerReportCompletedDelegate == null)) {
                this.onGetCustomerReportCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCustomerReportCompleted);
            }
            base.InvokeAsync(this.onBeginGetCustomerReportDelegate, new object[] {
                        pPartnerId,
                        pShortDateString}, this.onEndGetCustomerReportDelegate, this.onGetCustomerReportCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult RbrSiverlight.ServiceReference.DashboardService.BeginGetRouteReport(int pPartnerId, string pShortDateString, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRouteReport(pPartnerId, pShortDateString, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        RbrSiverlight.ServiceReference.ReportContainer RbrSiverlight.ServiceReference.DashboardService.EndGetRouteReport(System.IAsyncResult result) {
            return base.Channel.EndGetRouteReport(result);
        }
        
        private System.IAsyncResult OnBeginGetRouteReport(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int pPartnerId = ((int)(inValues[0]));
            string pShortDateString = ((string)(inValues[1]));
            return ((RbrSiverlight.ServiceReference.DashboardService)(this)).BeginGetRouteReport(pPartnerId, pShortDateString, callback, asyncState);
        }
        
        private object[] OnEndGetRouteReport(System.IAsyncResult result) {
            RbrSiverlight.ServiceReference.ReportContainer retVal = ((RbrSiverlight.ServiceReference.DashboardService)(this)).EndGetRouteReport(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRouteReportCompleted(object state) {
            if ((this.GetRouteReportCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRouteReportCompleted(this, new GetRouteReportCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRouteReportAsync(int pPartnerId, string pShortDateString) {
            this.GetRouteReportAsync(pPartnerId, pShortDateString, null);
        }
        
        public void GetRouteReportAsync(int pPartnerId, string pShortDateString, object userState) {
            if ((this.onBeginGetRouteReportDelegate == null)) {
                this.onBeginGetRouteReportDelegate = new BeginOperationDelegate(this.OnBeginGetRouteReport);
            }
            if ((this.onEndGetRouteReportDelegate == null)) {
                this.onEndGetRouteReportDelegate = new EndOperationDelegate(this.OnEndGetRouteReport);
            }
            if ((this.onGetRouteReportCompletedDelegate == null)) {
                this.onGetRouteReportCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRouteReportCompleted);
            }
            base.InvokeAsync(this.onBeginGetRouteReportDelegate, new object[] {
                        pPartnerId,
                        pShortDateString}, this.onEndGetRouteReportDelegate, this.onGetRouteReportCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult RbrSiverlight.ServiceReference.DashboardService.BeginGetTrunkReport(int pPartnerId, string pShortDateString, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTrunkReport(pPartnerId, pShortDateString, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        RbrSiverlight.ServiceReference.ReportContainer RbrSiverlight.ServiceReference.DashboardService.EndGetTrunkReport(System.IAsyncResult result) {
            return base.Channel.EndGetTrunkReport(result);
        }
        
        private System.IAsyncResult OnBeginGetTrunkReport(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int pPartnerId = ((int)(inValues[0]));
            string pShortDateString = ((string)(inValues[1]));
            return ((RbrSiverlight.ServiceReference.DashboardService)(this)).BeginGetTrunkReport(pPartnerId, pShortDateString, callback, asyncState);
        }
        
        private object[] OnEndGetTrunkReport(System.IAsyncResult result) {
            RbrSiverlight.ServiceReference.ReportContainer retVal = ((RbrSiverlight.ServiceReference.DashboardService)(this)).EndGetTrunkReport(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTrunkReportCompleted(object state) {
            if ((this.GetTrunkReportCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTrunkReportCompleted(this, new GetTrunkReportCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTrunkReportAsync(int pPartnerId, string pShortDateString) {
            this.GetTrunkReportAsync(pPartnerId, pShortDateString, null);
        }
        
        public void GetTrunkReportAsync(int pPartnerId, string pShortDateString, object userState) {
            if ((this.onBeginGetTrunkReportDelegate == null)) {
                this.onBeginGetTrunkReportDelegate = new BeginOperationDelegate(this.OnBeginGetTrunkReport);
            }
            if ((this.onEndGetTrunkReportDelegate == null)) {
                this.onEndGetTrunkReportDelegate = new EndOperationDelegate(this.OnEndGetTrunkReport);
            }
            if ((this.onGetTrunkReportCompletedDelegate == null)) {
                this.onGetTrunkReportCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTrunkReportCompleted);
            }
            base.InvokeAsync(this.onBeginGetTrunkReportDelegate, new object[] {
                        pPartnerId,
                        pShortDateString}, this.onEndGetTrunkReportDelegate, this.onGetTrunkReportCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult RbrSiverlight.ServiceReference.DashboardService.BeginLogger(string pMessage, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLogger(pMessage, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void RbrSiverlight.ServiceReference.DashboardService.EndLogger(System.IAsyncResult result) {
            base.Channel.EndLogger(result);
        }
        
        private System.IAsyncResult OnBeginLogger(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string pMessage = ((string)(inValues[0]));
            return ((RbrSiverlight.ServiceReference.DashboardService)(this)).BeginLogger(pMessage, callback, asyncState);
        }
        
        private object[] OnEndLogger(System.IAsyncResult result) {
            ((RbrSiverlight.ServiceReference.DashboardService)(this)).EndLogger(result);
            return null;
        }
        
        private void OnLoggerCompleted(object state) {
            if ((this.LoggerCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoggerCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoggerAsync(string pMessage) {
            this.LoggerAsync(pMessage, null);
        }
        
        public void LoggerAsync(string pMessage, object userState) {
            if ((this.onBeginLoggerDelegate == null)) {
                this.onBeginLoggerDelegate = new BeginOperationDelegate(this.OnBeginLogger);
            }
            if ((this.onEndLoggerDelegate == null)) {
                this.onEndLoggerDelegate = new EndOperationDelegate(this.OnEndLogger);
            }
            if ((this.onLoggerCompletedDelegate == null)) {
                this.onLoggerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoggerCompleted);
            }
            base.InvokeAsync(this.onBeginLoggerDelegate, new object[] {
                        pMessage}, this.onEndLoggerDelegate, this.onLoggerCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override RbrSiverlight.ServiceReference.DashboardService CreateChannel() {
            return new DashboardServiceClientChannel(this);
        }
        
        private class DashboardServiceClientChannel : ChannelBase<RbrSiverlight.ServiceReference.DashboardService>, RbrSiverlight.ServiceReference.DashboardService {
            
            public DashboardServiceClientChannel(System.ServiceModel.ClientBase<RbrSiverlight.ServiceReference.DashboardService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginLogin(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("Login", _args, callback, asyncState);
                return _result;
            }
            
            public RbrSiverlight.ServiceReference.ReportContext EndLogin(System.IAsyncResult result) {
                object[] _args = new object[0];
                RbrSiverlight.ServiceReference.ReportContext _result = ((RbrSiverlight.ServiceReference.ReportContext)(base.EndInvoke("Login", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetNodeReport(string pShortDateString, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = pShortDateString;
                System.IAsyncResult _result = base.BeginInvoke("GetNodeReport", _args, callback, asyncState);
                return _result;
            }
            
            public RbrSiverlight.ServiceReference.ReportContainer EndGetNodeReport(System.IAsyncResult result) {
                object[] _args = new object[0];
                RbrSiverlight.ServiceReference.ReportContainer _result = ((RbrSiverlight.ServiceReference.ReportContainer)(base.EndInvoke("GetNodeReport", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCustomerReport(int pPartnerId, string pShortDateString, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = pPartnerId;
                _args[1] = pShortDateString;
                System.IAsyncResult _result = base.BeginInvoke("GetCustomerReport", _args, callback, asyncState);
                return _result;
            }
            
            public RbrSiverlight.ServiceReference.ReportContainer EndGetCustomerReport(System.IAsyncResult result) {
                object[] _args = new object[0];
                RbrSiverlight.ServiceReference.ReportContainer _result = ((RbrSiverlight.ServiceReference.ReportContainer)(base.EndInvoke("GetCustomerReport", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetRouteReport(int pPartnerId, string pShortDateString, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = pPartnerId;
                _args[1] = pShortDateString;
                System.IAsyncResult _result = base.BeginInvoke("GetRouteReport", _args, callback, asyncState);
                return _result;
            }
            
            public RbrSiverlight.ServiceReference.ReportContainer EndGetRouteReport(System.IAsyncResult result) {
                object[] _args = new object[0];
                RbrSiverlight.ServiceReference.ReportContainer _result = ((RbrSiverlight.ServiceReference.ReportContainer)(base.EndInvoke("GetRouteReport", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetTrunkReport(int pPartnerId, string pShortDateString, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = pPartnerId;
                _args[1] = pShortDateString;
                System.IAsyncResult _result = base.BeginInvoke("GetTrunkReport", _args, callback, asyncState);
                return _result;
            }
            
            public RbrSiverlight.ServiceReference.ReportContainer EndGetTrunkReport(System.IAsyncResult result) {
                object[] _args = new object[0];
                RbrSiverlight.ServiceReference.ReportContainer _result = ((RbrSiverlight.ServiceReference.ReportContainer)(base.EndInvoke("GetTrunkReport", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginLogger(string pMessage, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = pMessage;
                System.IAsyncResult _result = base.BeginInvoke("Logger", _args, callback, asyncState);
                return _result;
            }
            
            public void EndLogger(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("Logger", _args, result);
            }
        }
    }
}
