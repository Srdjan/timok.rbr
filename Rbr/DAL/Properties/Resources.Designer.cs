//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4918
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Timok.Rbr.DAL.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Timok.Rbr.DAL.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to USE master
        ///
        ///-- define db name
        ///DECLARE @dbname varchar(500)
        ///SET @dbname = &apos;RbrDb_$(DB_VERSION)&apos;
        ///DECLARE @datetime varchar(15)
        ///
        ///-- START Prepare directories 
        ///DECLARE @dbDir varchar(500)
        ///SET @dbDir = &apos;C:\Timok\Rbr\SqlDb\&apos;
        ///
        ///DECLARE @dbBackupDir varchar(500)
        ///SET @dbBackupDir = &apos;C:\Timok\Rbr\SqlDb\BACKUPS\&apos;
        ///
        ///-- get datetime for backup file name
        ///SET @datetime = 
        ///CAST(YEAR(GETDATE()) AS char(4)) + 
        ///RIGHT(&apos;0&apos; + RTRIM(CAST(MONTH(GETDATE()) AS char(2))), 2) + 
        ///RIGHT(&apos;0&apos; + RTRIM(CAST(DAY(GETDATE()) AS [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string BACKUP_RBR_DB {
            get {
                return ResourceManager.GetString("BACKUP_RBR_DB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to USE master
        ///
        ///CREATE DATABASE [CdrDb_$(DB_NAME_SUFFIX)]
        ///ON (NAME = N&apos;CdrDb_$(DB_NAME_SUFFIX)_Data&apos;,
        ///FILENAME = N&apos;$(DB_DIR)\CdrDb_$(DB_NAME_SUFFIX)_Data.MDF&apos;,
        ///SIZE = 64MB,
        ///FILEGROWTH = 64MB)
        ///LOG ON (NAME = N&apos;CdrDb_$(DB_NAME_SUFFIX)_Log&apos;,
        ///FILENAME = N&apos;$(DB_DIR)\CdrDb_$(DB_NAME_SUFFIX)_Log.LDF&apos;,
        ///SIZE = 7,
        ///FILEGROWTH = 10%)
        ///
        ///ALTER DATABASE [CdrDb_$(DB_NAME_SUFFIX)] SET AUTO_CLOSE OFF WITH NO_WAIT.
        /// </summary>
        internal static string CREATE_CDR_DB {
            get {
                return ResourceManager.GetString("CREATE_CDR_DB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to USE CdrDb_$(DB_NAME_SUFFIX)
        ///GO
        ///
        ///CREATE FUNCTION dbo.IntToDottedIPAddress 
        ///(
        /// @IPAddressAsInt int
        ///)
        ///
        ////**
        ///--if you need to drop it
        ///if exists (select 1
        ///          from sysobjects
        ///          where  id = object_id(&apos;dbo.IntToDottedIPAddress)
        ///          and type in (&apos;IF&apos;, &apos;FN&apos;, &apos;TF&apos;))
        ///   drop function dbo.IntToDottedIPAddress
        ///--go
        ///*/
        ////**************************************************************************
        ///DESCRIPTION: Returns dotted IPAddress
        ///
        ///PARAMETERS:
        ///  (@IPAddressAsInt int) - The int numb [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CREATE_CDR_DB_FUNCTIONS {
            get {
                return ResourceManager.GetString("CREATE_CDR_DB_FUNCTIONS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to USE CdrDb_$(DB_NAME_SUFFIX)
        ///GO
        ///
        ///
        ///CREATE TABLE CDR (
        ///       date_logged          datetime NOT NULL,
        ///       timok_date           int NOT NULL,
        ///       start                datetime NOT NULL,
        ///       duration             smallint NOT NULL,
        ///       ccode                int NOT NULL,
        ///       local_number         varchar(18) NOT NULL,
        ///       carrier_route_id     int NOT NULL,
        ///       price                decimal(9,5) NOT NULL,
        ///       cost                 decimal(9,5) NOT NULL,
        ///       orig_IP_address      [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CREATE_CDR_DB_TABLES {
            get {
                return ResourceManager.GetString("CREATE_CDR_DB_TABLES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to USE CdrDb_$(DB_NAME_SUFFIX)
        ///GO
        ///
        ///CREATE VIEW dbo.CDRView
        ///AS
        ///SELECT 
        ///dbo.CDR.id, 
        ///dbo.CDR.date_logged, 
        ///dbo.CDR.timok_date, 
        ///dbo.CDR.start, 
        ///dbo.CDR.duration, 
        ///dbo.CDR.ccode, 
        ///dbo.CDR.local_number, 
        ///dbo.CDR.carrier_route_id, 
        ///dbo.CDR.price, 
        ///dbo.CDR.cost, 
        ///dbo.CDR.orig_IP_address, 
        ///dbo.CDR.orig_end_point_id, 
        ///dbo.CDR.term_end_point_id, 
        ///dbo.CDR.customer_acct_id, 
        ///dbo.CDR.disconnect_cause, 
        ///dbo.CDR.disconnect_source, 
        ///dbo.CDR.rbr_result, 
        ///dbo.CDR.prefix_in, 
        ///dbo.CDR.prefix_out, 
        ///dbo.CD [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CREATE_CDR_DB_VIEWS {
            get {
                return ResourceManager.GetString("CREATE_CDR_DB_VIEWS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*** [&lt;&lt;CDRDB_NAME&gt;&gt;] ***/
        ///CREATE USER [NT AUTHORITY\NETWORK SERVICE] FOR LOGIN [NT AUTHORITY\NETWORK SERVICE]; --WITH DEFAULT_SCHEMA=[dbo]
        ///EXEC sp_addrolemember N&apos;db_owner&apos;, N&apos;NT AUTHORITY\NETWORK SERVICE&apos;
        ///
        ///.
        /// </summary>
        internal static string CREATE_NETSERVICE_DB_USER_TEMPLATE {
            get {
                return ResourceManager.GetString("CREATE_NETSERVICE_DB_USER_TEMPLATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to USE master
        ///
        ///CREATE DATABASE [RbrDb_$(DB_VERSION)]
        ///ON PRIMARY
        ///(
        ///  NAME = N&apos;RbrDb_$(DB_VERSION)_Data&apos;,
        ///  FILENAME = N&apos;C:\Timok\Rbr\SqlDb\RbrDb_$(DB_VERSION)_Data.MDF&apos;,
        ///  SIZE = 64MB,
        ///  FILEGROWTH = 64MB
        ///),
        ///FILEGROUP CdrAggFg_$(DB_VERSION)
        ///( 
        ///  NAME = N&apos;CdrAggFg_$(DB_VERSION)_Data&apos;,
        ///  FILENAME = N&apos;C:\Timok\Rbr\SqlDb\CdrAggFg_$(DB_VERSION)_Data.NDF&apos;,
        ///  SIZE = 64MB,
        ///  FILEGROWTH = 64MB
        ///)
        ///LOG ON 
        ///(
        ///  NAME = N&apos;RbrDb_$(DB_VERSION)_Log&apos;,
        ///  FILENAME = N&apos;C:\Timok\Rbr\SqlDb\RbrDb_$(DB_VERSION)_Log.L [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CREATE_RBR_DB {
            get {
                return ResourceManager.GetString("CREATE_RBR_DB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /* MSSQL 2000 */ 
        ////* IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE object_id = OBJECT_ID(N&apos;[dbo].[CDRView]&apos;)) */
        ///
        ////* MSSQL 2005 */ 
        ///IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N&apos;[dbo].[CDRView]&apos;))
        ///DROP VIEW [dbo].[CDRView]
        /// .
        /// </summary>
        internal static string DROP_CDR_DB_VIEWS {
            get {
                return ResourceManager.GetString("DROP_CDR_DB_VIEWS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to BULK INSERT RbrDb_$(DB_VERSION).dbo.Country FROM &apos;$(IMPORT_FILES_PATH)\Country.txt&apos; WITH (BATCHSIZE = 1000)
        ///BULK INSERT RbrDb_$(DB_VERSION).dbo.Route FROM &apos;$(IMPORT_FILES_PATH)\Route.txt&apos; WITH (BATCHSIZE = 1000)
        ///BULK INSERT RbrDb_$(DB_VERSION).dbo.DialCode FROM &apos;$(IMPORT_FILES_PATH)\DialCode.txt&apos; WITH (BATCHSIZE = 1000)
        ///.
        /// </summary>
        internal static string LOAD_INIT_DATA {
            get {
                return ResourceManager.GetString("LOAD_INIT_DATA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -- GET ACTIVE CARRIER/ROUTES THAT COVER CustomerDialCode
        ///-- TO SHOW IN ACTUAL LCR Routing Table
        ///
        ///--DEBUG
        ////*
        ///
        ///--*****************************************
        ///-- THESE HAS TO BE PASSED AS PARAMS
        ///DECLARE @CallingPlanId int
        ///DECLARE @CustomerDialCode bigint
        ///--*****************************************
        ///
        ///
        ///SET @CallingPlanId = 1
        ///SET @CustomerDialCode = 53--238--
        ///
        ///DECLARE @carr_dc_count int
        ///*/
        ///
        ///DECLARE @country_id int
        ///DECLARE @country_code int
        ///DECLARE @CustomerBaseRouteId int
        ///SET @CustomerBaseRouteI [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string TerminationRouteViewCollection_GetActiveByCustomerDialCode {
            get {
                return ResourceManager.GetString("TerminationRouteViewCollection_GetActiveByCustomerDialCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -- GET ACTIVE CARRIER/ROUTES THAT COVER CustomerDialCodes for provided Route 
        ///-- TO SHOW IN AVAILABLE LIST for LCR 
        ///
        ///--DEBUG
        ////*
        ///--*****************************************
        ///-- THESE HAS TO BE PASSED AS PARAMS
        ///DECLARE @CustomerBaseRouteId int
        ///DECLARE @IsLCRMode tinyint -- 0=false; 1=true
        ///--*****************************************
        ///
        ///
        ///SET @CustomerBaseRouteId = 250--151--250--250--
        ///SET @IsLCRMode = 1
        ///
        ///DECLARE @carr_dc_count int
        ///*/
        ///
        ///DECLARE @country_id int
        ///DECLARE @country_code int
        ///SET @count [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string TerminationRouteViewCollection_GetAvailableByCustomerBaseRouteId {
            get {
                return ResourceManager.GetString("TerminationRouteViewCollection_GetAvailableByCustomerBaseRouteId", resourceCulture);
            }
        }
    }
}
